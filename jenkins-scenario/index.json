{
    "pathwayTitle": "Jenkins",
    "title": "Building Docker Images using Jenkins Pipeline",
    "description": "Dell's Summer Academy workshop",
    "difficulty": "Advanced",
    "time": "30-40 minutes",
    "details": {
        "steps": [
            {
                "title": "Install Jenkins and Docker",
                "text": "step1.md"
            },
            {
                "title": "Access Jenkins and install plugins",
                "text": "step2.md"
            },
            {
                "title": "Configure the Jenkins agent",
                "text": "step3.md"
            },
            {
                "title": "Create the Pipeline",
                "text": "step4.md"
            },
            {
                "title": "First stage (Clonning the repo)",
                "text": "step5.md"
            },
            {
                "title": "Second stage (Run application prerequisites)",
                "text": "step6.md"
            },
            {
                "title": "Third stage (Run the unit test)",
                "text": "step7.md"
            },
            {
                "title": "Fourth stage modifcation (Build application using docker)",
                "text": "step8.md"
            },
            {
                "title": "Fifth stage (Run application using docker)",
                "text": "step9.md"
            },
            {
                "title": "Create Jenkins Credentials",
                "text": "step10.md"
            },
            {
                "title": "Sixth stage (push you image to DockerHub)",
                "text": "step11.md"
            }
        ],
        "intro": {
            "text": "intro.md"
        },

        "finish": {
            "text": "finish.md"
        }
    },
    "environment": {
        "showdashboard": true,
        "dashboard": "Dashboard",
        "uilayout": "editor-terminal",
        "uimessage1": "\u001b[32mYour Interactive Bash Terminal.\u001b[m\r\n"
    },
    "backend": {
        "imageid": "ubuntu",
        "port": 8080
    }
}
